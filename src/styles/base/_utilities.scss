// Only in the utility classes we want to use the
// !important keyword.
// As best practice never use it
// But in case of utility we want it to overide
// anything, because we want to force the utility.
// We want the utility to beagnostic to the
// styling hierachy of the specific location we
// add it to.

@mixin u-display-flex-justify-content-center {
  border: solid 2px black;
  display: flex;
  justify-content: center;
}

.u-text-align-center {
  text-align: center !important;
}

.u-text-align-justify {
  // text-align: justify aligns text to both the left and right edges of its container.
  // meaning it "spreads" the text using spacing between words so that the text fills the whole line.
  text-align: justify !important;
}

.u-text-align-right {
  background-color: red;
  border: solid 2px black;
  text-align: right !important;
}

.u-flex-child-width-medium {
  width: 100px;
  flex: 0 0 100px; /* shorthand for flex-grow, flex-shrink, flex-basis */
}

/// margin bottom

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important;
}

.u-margin-bottom-medium {
  margin-bottom: 4rem !important;
}

.u-margin-bottom-big {
  margin-bottom: 8rem !important;
}

/// margin right

.u-margin-right-small {
  margin-right: 1.5rem !important;
}

.u-margin-right-medium {
  margin-right: 4rem !important;
}

.u-margin-top-big {
  margin-top: 8rem !important;
}

.u-margin-top-huge {
  margin-top: 10rem !important;
}

.u-container-center {
  margin: 0 20rem !important;
}

//////////////////////////////
/// // P A D D I N G
//////////////////////////////

.u-padding-top-medium {
  padding-top: 3rem !important;
}

.u-padding-bottom-medium {
  padding-bottom: 3rem !important;
}

.u-padding-vertical-medium {
  padding: 3rem 0 !important;
}
